AWSTemplateFormatVersion: 2010-09-09
Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31
Description: Amazon Bedrock Playground - Infra for using Bedrock Knowledge Bases

Parameters:
  StackNamePrefix:
    Type: String
  DeployerArn:
    Type: String

Resources:
  # S3 Bucket for input data
  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${AWS::StackName}-input"
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
            ExpiredObjectDeleteMarker: true
            NoncurrentVersionExpirationInDays: 14
      LoggingConfiguration:
        DestinationBucketName: !ImportValue infra-buckets-LogBucket
        LogFilePrefix: !Sub s3_access/bucket=${AWS::StackName}-input/
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-input" }
      VersioningConfiguration:
        Status: Enabled

  # IAM Role for Amazon Bedrock
  AmazonBedrockExecutionRoleForKnowledgeBase:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: bedrock.amazonaws.com
          Condition:
            StringEquals:
              aws:SourceAccount: !Ref AWS::AccountId
            ArnLike:
              aws:SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:knowledge-base/*
      Description: !Sub Role for Amazon Bedrock Knowledge bases to access required resources ${AWS::StackName}
      RoleName: !Sub AmazonBedrockExecutionRoleForKnowledgeBase-${AWS::StackName}
      Path: /service-role/
      Policies:
        - PolicyName: BedrockAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - bedrock:ListFoundationModels
                - bedrock:ListCustomModels
              Resource: "*"
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource:
                - !Sub arn:aws:bedrock:${AWS::Region}::foundation-model/amazon.titan-embed-text-v1

        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:ListBucket
              Resource:
                - !Sub ${InputBucket.Arn}
                - !Sub ${InputBucket.Arn}/*
              Condition:
                StringEquals:
                  aws:PrincipalAccount: !Ref AWS::AccountId

  # OpenSearch Serverless Collection for vector storage
  DataAccessPolicy:
    Type: AWS::OpenSearchServerless::AccessPolicy
    Properties:
      Name: !Sub ${AWS::StackName}
      Type: data
      Description: Access policy for quickstart collection
      Policy:
        Fn::ToJsonString:
          - Description: Grant Amazon Bedrock Knowledge Bases access to OpenSearch Serverless index
            Principal:
              - !GetAtt AmazonBedrockExecutionRoleForKnowledgeBase.Arn
              - !Ref DeployerArn
            Rules:
            - ResourceType: collection
              Resource:
                - !Sub collection/${AWS::StackName}
              Permission:
                - aoss:DescribeCollectionItems
                - aoss:CreateCollectionItems
                - aoss:UpdateCollectionItems
            - ResourceType: index
              Resource:
                - !Sub index/${AWS::StackName}/*
              Permission:
                - aoss:UpdateIndex
                - aoss:DescribeIndex
                - aoss:ReadDocument
                - aoss:WriteDocument
                - aoss:CreateIndex

  NetworkPolicy:
    Type: AWS::OpenSearchServerless::SecurityPolicy
    Properties:
      Name: !Sub ${AWS::StackName}
      Type: network
      Description: !Sub Network policy for collection to be used with Amazon Bedrock Knowledge base ${AWS::StackName}
      Policy:
        Fn::ToJsonString:
          - AllowFromPublic: true
            Rules:
            - ResourceType: dashboard
              Resource:
                - !Sub collection/${AWS::StackName}
            - ResourceType: collection
              Resource:
                - !Sub collection/${AWS::StackName}

  EncryptionPolicy:
    Type: AWS::OpenSearchServerless::SecurityPolicy
    Properties:
      Name: !Sub ${AWS::StackName}
      Type: encryption
      Description: !Sub Encryption policy for collection to be used with Amazon Bedrock Knowledge base ${AWS::StackName}
      Policy:
        Fn::ToJsonString:
          AWSOwnedKey: true
          Rules:
            - ResourceType: collection
              Resource:
                - !Sub collection/${AWS::StackName}

  Collection:
    Type: AWS::OpenSearchServerless::Collection
    DependsOn: EncryptionPolicy
    Properties:
      Description: !Sub Collection to store Bedrock Knowledge Base vectors (${AWS::StackName})
      Name: !Sub ${AWS::StackName}
      StandbyReplicas: DISABLED
      Type: VECTORSEARCH
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}" }

  CollectionAccess:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AOSSAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
            - aoss:APIAccessAll
          Resource:
            - !Sub ${Collection.Arn}
      Roles:
        - !Ref AmazonBedrockExecutionRoleForKnowledgeBase


Outputs:
  CollectionArn:
    Value: !GetAtt Collection.Arn
  CollectionEndpoint:
    Value: !GetAtt Collection.CollectionEndpoint
  DashboardEndpoint:
    Value: !GetAtt Collection.DashboardEndpoint

  BedrockRoleArn:
    Value: !GetAtt AmazonBedrockExecutionRoleForKnowledgeBase.Arn

  InputBucketArn:
    Value: !GetAtt InputBucket.Arn